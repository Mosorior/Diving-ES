{"ast":null,"code":"var _jsxFileName = \"/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere, useTexture } from '@react-three/drei';\nimport earthTexture from \"./earth.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Earth = () => {\n  _s();\n  const earthRef = useRef();\n  const texture = useTexture(earthTexture);\n\n  // Rotar la Tierra usando useFrame\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.005;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: earthRef,\n    args: [2, 64, 64],\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"blue\",\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Earth, \"RvWyYsrjdZHrs+A7OJbQi9WyiCc=\", false, function () {\n  return [useTexture, useFrame];\n});\n_c = Earth;\nexport default Earth;\nvar _c;\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"names":["React","useRef","useFrame","Sphere","useTexture","earthTexture","jsxDEV","_jsxDEV","Earth","_s","earthRef","texture","current","rotation","y","ref","args","children","attach","color","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere, useTexture } from '@react-three/drei';\nimport earthTexture from \"./earth.jpg\";\n\nexport const Earth = () => {\n  const earthRef = useRef();\n  const texture = useTexture(earthTexture);\n\n  // Rotar la Tierra usando useFrame\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.005;\n    }\n  });\n\n  return (\n    <Sphere ref={earthRef} args={[2, 64, 64]}>\n      <meshStandardMaterial attach=\"material\" color=\"blue\" map={texture} />\n    </Sphere>\n  );\n};\n\nexport default Earth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AACtD,OAAOC,YAAY,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,CAAC;EACzB,MAAMU,OAAO,GAAGP,UAAU,CAACC,YAAY,CAAC;;EAExC;EACAH,QAAQ,CAAC,MAAM;IACb,IAAIQ,QAAQ,CAACE,OAAO,EAAE;MACpBF,QAAQ,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,KAAK;IACtC;EACF,CAAC,CAAC;EAEF,oBACEP,OAAA,CAACJ,MAAM;IAACY,GAAG,EAAEL,QAAS;IAACM,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;IAAAC,QAAA,eACvCV,OAAA;MAAsBW,MAAM,EAAC,UAAU;MAACC,KAAK,EAAC,MAAM;MAACC,GAAG,EAAET;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEb,CAAC;AAACf,EAAA,CAhBWD,KAAK;EAAA,QAEAJ,UAAU,EAG1BF,QAAQ;AAAA;AAAAuB,EAAA,GALGjB,KAAK;AAkBlB,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}