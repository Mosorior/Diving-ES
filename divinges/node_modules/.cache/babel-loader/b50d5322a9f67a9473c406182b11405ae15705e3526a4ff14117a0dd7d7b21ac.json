{"ast":null,"code":"var _jsxFileName = \"/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere, useTexture } from '@react-three/drei';\nimport earthTexture from \"./8081_earth.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Earth = () => {\n  _s();\n  const earthRef = useRef();\n  const texture = useTexture(earthTexture);\n  const [isDragging, setDragging] = useState(false);\n\n  // Rotar la Tierra automáticamente\n  useFrame(() => {\n    if (!isDragging && earthRef.current) {\n      earthRef.current.rotation.y += 0.0005;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: earthRef,\n    args: [2, 64, 64],\n    onClick: () => setDragging(!isDragging),\n    onPointerMove: event => {\n      if (isDragging) {\n        const {\n          movementX,\n          movementY\n        } = event.nativeEvent;\n        earthRef.current.rotation.y += movementX / 300;\n        earthRef.current.rotation.x += movementY / 300;\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Earth, \"p/7PqfY6n5e2IsjzzrA1fzp0+yg=\", false, function () {\n  return [useTexture, useFrame];\n});\n_c = Earth;\nexport default Earth;\nvar _c;\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"names":["React","useRef","useState","useFrame","Sphere","useTexture","earthTexture","jsxDEV","_jsxDEV","Earth","_s","earthRef","texture","isDragging","setDragging","current","rotation","y","ref","args","onClick","onPointerMove","event","movementX","movementY","nativeEvent","x","children","attach","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere, useTexture } from '@react-three/drei';\nimport earthTexture from \"./8081_earth.jpg\";\n\nexport const Earth = () => {\n  const earthRef = useRef();\n  const texture = useTexture(earthTexture);\n  const [isDragging, setDragging] = useState(false);\n\n  // Rotar la Tierra automáticamente\n  useFrame(() => {\n    if (!isDragging && earthRef.current) {\n      earthRef.current.rotation.y += 0.0005;\n    }\n  });\n\n  return (\n    <Sphere\n      ref={earthRef}\n      args={[2, 64, 64]}\n      onClick={() => setDragging(!isDragging)}\n      onPointerMove={(event) => {\n        if (isDragging) {\n          const { movementX, movementY } = event.nativeEvent;\n          earthRef.current.rotation.y += movementX / 300;\n          earthRef.current.rotation.x += movementY / 300;\n        }\n      }}\n    >\n      <meshStandardMaterial attach=\"material\" map={texture} />\n    </Sphere>\n  );\n};\n\nexport default Earth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AACtD,OAAOC,YAAY,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAC;EACzB,MAAMW,OAAO,GAAGP,UAAU,CAACC,YAAY,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,QAAQ,CAAC,MAAM;IACb,IAAI,CAACU,UAAU,IAAIF,QAAQ,CAACI,OAAO,EAAE;MACnCJ,QAAQ,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,MAAM;IACvC;EACF,CAAC,CAAC;EAEF,oBACET,OAAA,CAACJ,MAAM;IACLc,GAAG,EAAEP,QAAS;IACdQ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;IAClBC,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAAC,CAACD,UAAU,CAAE;IACxCQ,aAAa,EAAGC,KAAK,IAAK;MACxB,IAAIT,UAAU,EAAE;QACd,MAAM;UAAEU,SAAS;UAAEC;QAAU,CAAC,GAAGF,KAAK,CAACG,WAAW;QAClDd,QAAQ,CAACI,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAIM,SAAS,GAAG,GAAG;QAC9CZ,QAAQ,CAACI,OAAO,CAACC,QAAQ,CAACU,CAAC,IAAIF,SAAS,GAAG,GAAG;MAChD;IACF,CAAE;IAAAG,QAAA,eAEFnB,OAAA;MAAsBoB,MAAM,EAAC,UAAU;MAACC,GAAG,EAAEjB;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEb,CAAC;AAACvB,EAAA,CA5BWD,KAAK;EAAA,QAEAJ,UAAU,EAI1BF,QAAQ;AAAA;AAAA+B,EAAA,GANGzB,KAAK;AA8BlB,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}