{"ast":null,"code":"var _jsxFileName = \"/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere } from '@react-three/drei';\nimport { Html } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Earth = () => {\n  _s();\n  const earthRef = useRef();\n\n  // Rotar la Tierra usando useFrame\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.005;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      ref: earthRef,\n      args: [2, 64, 64],\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Html, {\n      center: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"earthTexture\",\n        src: \"./assets/imgs/earth.jpg\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Earth, \"XuNVB/mCrmTpMPxHY2Hxwc/XPlQ=\", false, function () {\n  return [useFrame];\n});\n_c = Earth;\nexport default Earth;\nvar _c;\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"names":["React","useRef","useFrame","Sphere","Html","jsxDEV","_jsxDEV","Earth","_s","earthRef","current","rotation","y","children","ref","args","attach","color","fileName","_jsxFileName","lineNumber","columnNumber","center","alt","src","style","width","_c","$RefreshReg$"],"sources":["/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Sphere } from '@react-three/drei';\nimport { Html } from '@react-three/drei';\n\nconst Earth = () => {\n  const earthRef = useRef();\n\n  // Rotar la Tierra usando useFrame\n  useFrame(() => {\n    if (earthRef.current) {\n      earthRef.current.rotation.y += 0.005;\n    }\n  });\n\n  return (\n    <group>\n      <Sphere ref={earthRef} args={[2, 64, 64]}>\n        <meshStandardMaterial attach=\"material\" color=\"white\" />\n      </Sphere>\n      <Html center>\n        <img\n          alt=\"earthTexture\"\n          src=\"./assets/imgs/earth.jpg\"\n          style={{ width: '100%' }}\n        />\n      </Html>\n    </group>\n  );\n};\n\nexport default Earth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,MAAM,CAAC,CAAC;;EAEzB;EACAC,QAAQ,CAAC,MAAM;IACb,IAAIO,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,KAAK;IACtC;EACF,CAAC,CAAC;EAEF,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACH,MAAM;MAACW,GAAG,EAAEL,QAAS;MAACM,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;MAAAF,QAAA,eACvCP,OAAA;QAAsBU,MAAM,EAAC,UAAU;QAACC,KAAK,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACTf,OAAA,CAACF,IAAI;MAACkB,MAAM;MAAAT,QAAA,eACVP,OAAA;QACEiB,GAAG,EAAC,cAAc;QAClBC,GAAG,EAAC,yBAAyB;QAC7BC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAO;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACb,EAAA,CAxBID,KAAK;EAAA,QAITL,QAAQ;AAAA;AAAAyB,EAAA,GAJJpB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}