{"ast":null,"code":"import * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({\n  color: 0x00ff00\n});\nconst cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\ncamera.position.z = 5;\nfunction animate() {\n  requestAnimationFrame(animate);\n  cube.rotation.x += 0.01;\n  cube.rotation.y += 0.01;\n  renderer.render(scene, camera);\n}\nanimate();\nconst loader = new GLTFLoader();\nloader.load('../assets/models/Earth.glb', function (gltf) {\n  scene.add(gltf.scene);\n}, undefined, function (error) {\n  console.error(error);\n});","map":{"version":3,"names":["THREE","GLTFLoader","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","loader","load","gltf","undefined","error","console"],"sources":["/home/mosorior/Documentos/GitHub/Diving-ES/divinges/src/components/Earth.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst geometry = new THREE.BoxGeometry( 1, 1, 1 );\nconst material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\nconst cube = new THREE.Mesh( geometry, material );\nscene.add( cube );\n\ncamera.position.z = 5;\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\n\tcube.rotation.x += 0.01;\n\tcube.rotation.y += 0.01;\n\n\trenderer.render( scene, camera );\n}\n\nanimate();\n\nconst loader = new GLTFLoader();\n\nloader.load( '../assets/models/Earth.glb', function ( gltf ) {\n\n\tscene.add( gltf.scene );\n\n}, undefined, function ( error ) {\n\n\tconsole.error( error );\n\n} );"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,oCAAoC;AAE/D,MAAMC,KAAK,GAAG,IAAIF,KAAK,CAACG,KAAK,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAG,IAAIJ,KAAK,CAACK,iBAAiB,CAAE,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAK,CAAC;AAEnG,MAAMC,QAAQ,GAAG,IAAIT,KAAK,CAACU,aAAa,CAAC,CAAC;AAC1CD,QAAQ,CAACE,OAAO,CAAEL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAY,CAAC;AACzDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAEL,QAAQ,CAACM,UAAW,CAAC;AAEhD,MAAMC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACjD,MAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,iBAAiB,CAAE;EAAEC,KAAK,EAAE;AAAS,CAAE,CAAC;AACnE,MAAMC,IAAI,GAAG,IAAIrB,KAAK,CAACsB,IAAI,CAAEN,QAAQ,EAAEE,QAAS,CAAC;AACjDhB,KAAK,CAACqB,GAAG,CAAEF,IAAK,CAAC;AAEjBjB,MAAM,CAACoB,QAAQ,CAACC,CAAC,GAAG,CAAC;AAErB,SAASC,OAAOA,CAAA,EAAG;EAClBC,qBAAqB,CAAED,OAAQ,CAAC;EAEhCL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;EACvBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,IAAI;EAEvBrB,QAAQ,CAACsB,MAAM,CAAE7B,KAAK,EAAEE,MAAO,CAAC;AACjC;AAEAsB,OAAO,CAAC,CAAC;AAET,MAAMM,MAAM,GAAG,IAAI/B,UAAU,CAAC,CAAC;AAE/B+B,MAAM,CAACC,IAAI,CAAE,4BAA4B,EAAE,UAAWC,IAAI,EAAG;EAE5DhC,KAAK,CAACqB,GAAG,CAAEW,IAAI,CAAChC,KAAM,CAAC;AAExB,CAAC,EAAEiC,SAAS,EAAE,UAAWC,KAAK,EAAG;EAEhCC,OAAO,CAACD,KAAK,CAAEA,KAAM,CAAC;AAEvB,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}